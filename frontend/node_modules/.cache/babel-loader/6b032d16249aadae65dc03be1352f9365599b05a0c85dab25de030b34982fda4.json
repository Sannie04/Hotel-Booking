{"ast":null,"code":"import axios from'axios';import*as actions from'../constants/BookingConstants';export const checkRoomBooking=(id,checkInDate,checkOutDate)=>async dispatch=>{try{dispatch({type:actions.CHECK_ROOM_BOOKING_REQUEST});const config={headers:{\"Content-Type\":\"application/JSON\"}};await axios.post(`/api/bookings/check`,{id,checkInDate,checkOutDate},config);dispatch({type:actions.CHECK_ROOM_BOOKING_SUCCESS});}catch(error){dispatch({type:actions.CHECK_ROOM_BOOKING_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const createBooking=bookingData=>async(dispatch,getState)=>{try{dispatch({type:actions.CREATE_BOOKING_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-Type\":\"application/JSON\",\"Authorization\":`Bearer ${userInfo.token}`}};await axios.post(`/api/bookings`,bookingData,config);dispatch({type:actions.CREATE_BOOKING_SUCCESS});}catch(error){dispatch({type:actions.CREATE_BOOKING_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getBookedDates=roomId=>async dispatch=>{try{dispatch({type:actions.GET_BOOKED_DATES_REQUEST});const{data}=await axios.get(`/api/bookings/dates/${roomId}`);dispatch({type:actions.GET_BOOKED_DATES_SUCCESS,payload:data});}catch(error){dispatch({type:actions.GET_BOOKED_DATES_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getMyBookings=()=>async(dispatch,getState)=>{try{dispatch({type:actions.GET_MY_BOOKINGS_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-Type\":\"application/JSON\",\"Authorization\":`Bearer ${userInfo.token}`}};const{data}=await axios.get(`/api/bookings/me`,config);dispatch({type:actions.GET_MY_BOOKINGS_SUCCESS,payload:data});}catch(error){dispatch({type:actions.GET_MY_BOOKINGS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getAllBookings=currentPage=>async(dispatch,getState)=>{try{dispatch({type:actions.FETCH_BOOKINGS_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-Type\":\"application/JSON\",\"Authorization\":`Bearer ${userInfo.token}`}};const{data}=await axios.get(`/api/bookings/?pageNumber=${currentPage}`,config);dispatch({type:actions.FETCH_BOOKINGS_SUCCESS,payload:data});}catch(error){dispatch({type:actions.FETCH_BOOKINGS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const deleteBooking=bookingId=>async(dispatch,getState)=>{try{dispatch({type:actions.DELETE_BOOKING_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Authorization\":`Bearer ${userInfo.token}`}};await axios.delete(`/api/bookings/${bookingId}`,config);dispatch({type:actions.DELETE_BOOKING_SUCCESS});}catch(error){dispatch({type:actions.DELETE_BOOKING_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};","map":{"version":3,"names":["axios","actions","checkRoomBooking","id","checkInDate","checkOutDate","dispatch","type","CHECK_ROOM_BOOKING_REQUEST","config","headers","post","CHECK_ROOM_BOOKING_SUCCESS","error","CHECK_ROOM_BOOKING_FAIL","payload","response","data","message","createBooking","bookingData","getState","CREATE_BOOKING_REQUEST","userLogin","userInfo","token","CREATE_BOOKING_SUCCESS","CREATE_BOOKING_FAIL","getBookedDates","roomId","GET_BOOKED_DATES_REQUEST","get","GET_BOOKED_DATES_SUCCESS","GET_BOOKED_DATES_FAIL","getMyBookings","GET_MY_BOOKINGS_REQUEST","GET_MY_BOOKINGS_SUCCESS","GET_MY_BOOKINGS_FAIL","getAllBookings","currentPage","FETCH_BOOKINGS_REQUEST","FETCH_BOOKINGS_SUCCESS","FETCH_BOOKINGS_FAIL","deleteBooking","bookingId","DELETE_BOOKING_REQUEST","delete","DELETE_BOOKING_SUCCESS","DELETE_BOOKING_FAIL"],"sources":["D:/NAM3/DACN/hotel-booking-main/frontend/src/redux/actions/BookingActions.tsx"],"sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from 'axios';\nimport * as actions from '../constants/BookingConstants';\nimport { IRoom } from \"../../interfaces/IRoom\";\nimport { IBooking, ICreateBooking } from \"../../interfaces/IBooking\";\n\nexport const checkRoomBooking = (id: IRoom['_id'], checkInDate: Date, checkOutDate: Date) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.CHECK_ROOM_BOOKING_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n            }\n        }\n\n        await axios.post(`/api/bookings/check`, {id, checkInDate, checkOutDate}, config);\n\n        dispatch({ type: actions.CHECK_ROOM_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.CHECK_ROOM_BOOKING_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const createBooking = (bookingData: ICreateBooking) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.CREATE_BOOKING_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/bookings`, bookingData, config);\n\n        dispatch({ type: actions.CREATE_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.CREATE_BOOKING_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const getBookedDates = (roomId:  IRoom['_id']) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.GET_BOOKED_DATES_REQUEST });\n\n        const { data } = await axios.get(`/api/bookings/dates/${roomId}`);\n\n        dispatch({ type: actions.GET_BOOKED_DATES_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.GET_BOOKED_DATES_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const getMyBookings = () => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.GET_MY_BOOKINGS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/bookings/me`, config);\n\n        dispatch({ type: actions.GET_MY_BOOKINGS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.GET_MY_BOOKINGS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const getAllBookings = (currentPage: number) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.FETCH_BOOKINGS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/bookings/?pageNumber=${currentPage}`, config);\n\n        dispatch({ type: actions.FETCH_BOOKINGS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.FETCH_BOOKINGS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const deleteBooking = (bookingId: IBooking['_id']) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.DELETE_BOOKING_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/bookings/${bookingId}`, config);\n\n        dispatch({ type: actions.DELETE_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.DELETE_BOOKING_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}