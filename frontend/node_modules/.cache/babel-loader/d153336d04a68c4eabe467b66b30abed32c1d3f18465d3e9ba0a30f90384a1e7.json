{"ast":null,"code":"import axios from 'axios';\nimport * as actions from '../constants/RoomConstants';\nexport const fetchRooms = (keyword, numOfBeds, roomType, currentPage) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.FETCH_ROOMS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/rooms/?keyword=${keyword}&numOfBeds=${numOfBeds}&roomType=${roomType}&pageNumber=${currentPage}`);\n    dispatch({\n      type: actions.FETCH_ROOMS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.FETCH_ROOMS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getRoomDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actions.ROOM_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/rooms/${id}`);\n    dispatch({\n      type: actions.ROOM_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.ROOM_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createRoomReview = (id, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ROOM_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/rooms/${id}/reviews`, review, config);\n    dispatch({\n      type: actions.ROOM_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.ROOM_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createRoom = roomData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.CREATE_ROOM_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/rooms`, roomData, config);\n    dispatch({\n      type: actions.CREATE_ROOM_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.CREATE_ROOM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateRoom = (roomId, roomData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.UPDATE_ROOM_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/JSON',\n        'Authorization': `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.put(`/api/rooms/${roomId}`, roomData, config);\n    dispatch({\n      type: actions.UPDATE_ROOM_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.UPDATE_ROOM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteRoom = roomId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.DELETE_ROOM_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/rooms/${roomId}`, config);\n    dispatch({\n      type: actions.DELETE_ROOM_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.DELETE_ROOM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","actions","fetchRooms","keyword","numOfBeds","roomType","currentPage","dispatch","type","FETCH_ROOMS_REQUEST","data","get","FETCH_ROOMS_SUCCESS","payload","error","FETCH_ROOMS_FAIL","response","message","getRoomDetails","id","ROOM_DETAILS_REQUEST","ROOM_DETAILS_SUCCESS","ROOM_DETAILS_FAIL","createRoomReview","review","getState","ROOM_CREATE_REVIEW_REQUEST","userLogin","userInfo","config","headers","token","post","ROOM_CREATE_REVIEW_SUCCESS","ROOM_CREATE_REVIEW_FAIL","createRoom","roomData","CREATE_ROOM_REQUEST","CREATE_ROOM_SUCCESS","CREATE_ROOM_FAIL","updateRoom","roomId","UPDATE_ROOM_REQUEST","put","UPDATE_ROOM_SUCCESS","UPDATE_ROOM_FAIL","deleteRoom","DELETE_ROOM_REQUEST","delete","DELETE_ROOM_SUCCESS","DELETE_ROOM_FAIL"],"sources":["D:/NAM3/DACN/hotel-booking-main/frontend/src/redux/actions/RoomActions.tsx"],"sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport * as actions from '../constants/RoomConstants';\nimport { IRoom, ICreateReview, TCreateRoom } from '../../interfaces/IRoom';\n\nexport const fetchRooms = (keyword: string, numOfBeds: number | string, roomType: string, currentPage: number) => \nasync (dispatch: Dispatch) => {\n    try {\n        dispatch({ type: actions.FETCH_ROOMS_REQUEST });\n\n        const { data } = \n        await axios.get(`/api/rooms/?keyword=${keyword}&numOfBeds=${numOfBeds}&roomType=${roomType}&pageNumber=${currentPage}`);\n\n        dispatch({ type: actions.FETCH_ROOMS_SUCCESS, payload: data });\n        \n    } catch (error: any) {\n        dispatch({ \n            type: actions.FETCH_ROOMS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n}\n\nexport const getRoomDetails = (id: IRoom['_id']) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.ROOM_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/rooms/${id}`);\n        dispatch({ type: actions.ROOM_DETAILS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.ROOM_DETAILS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const createRoomReview = (id: IRoom['_id'], review: ICreateReview) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.ROOM_CREATE_REVIEW_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/rooms/${id}/reviews`, review, config);\n        dispatch({ type: actions.ROOM_CREATE_REVIEW_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.ROOM_CREATE_REVIEW_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const createRoom = (roomData: TCreateRoom) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.CREATE_ROOM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/rooms`, roomData, config);\n        dispatch({ type: actions.CREATE_ROOM_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.CREATE_ROOM_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const updateRoom = (roomId: IRoom['_id'], roomData: TCreateRoom) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        \n        dispatch({ type: actions.UPDATE_ROOM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/JSON',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/rooms/${roomId}`, roomData, config);\n        dispatch({ type: actions.UPDATE_ROOM_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.UPDATE_ROOM_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const deleteRoom = (roomId: IRoom['_id']) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.DELETE_ROOM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`/api/rooms/${roomId}`, config);\n        dispatch({ type: actions.DELETE_ROOM_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.DELETE_ROOM_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}