{"ast":null,"code":"import axios from'axios';import*as actions from'../constants/RoomConstants';export const fetchRooms=(keyword,numOfBeds,roomType,currentPage)=>async dispatch=>{try{dispatch({type:actions.FETCH_ROOMS_REQUEST});const{data}=await axios.get(`/api/rooms/?keyword=${keyword}&numOfBeds=${numOfBeds}&roomType=${roomType}&pageNumber=${currentPage}`);dispatch({type:actions.FETCH_ROOMS_SUCCESS,payload:data});}catch(error){dispatch({type:actions.FETCH_ROOMS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getRoomDetails=id=>async dispatch=>{try{dispatch({type:actions.ROOM_DETAILS_REQUEST});const{data}=await axios.get(`/api/rooms/${id}`);dispatch({type:actions.ROOM_DETAILS_SUCCESS,payload:data});}catch(error){dispatch({type:actions.ROOM_DETAILS_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const createRoomReview=(id,review)=>async(dispatch,getState)=>{try{dispatch({type:actions.ROOM_CREATE_REVIEW_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-Type\":\"application/JSON\",\"Authorization\":`Bearer ${userInfo.token}`}};await axios.post(`/api/rooms/${id}/reviews`,review,config);dispatch({type:actions.ROOM_CREATE_REVIEW_SUCCESS});}catch(error){dispatch({type:actions.ROOM_CREATE_REVIEW_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const createRoom=roomData=>async(dispatch,getState)=>{try{dispatch({type:actions.CREATE_ROOM_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Content-Type\":\"application/JSON\",\"Authorization\":`Bearer ${userInfo.token}`}};await axios.post(`/api/rooms`,roomData,config);dispatch({type:actions.CREATE_ROOM_SUCCESS});}catch(error){dispatch({type:actions.CREATE_ROOM_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const updateRoom=(roomId,roomData)=>async(dispatch,getState)=>{try{dispatch({type:actions.UPDATE_ROOM_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{'Content-Type':'application/JSON','Authorization':`Bearer ${userInfo.token}`}};await axios.put(`/api/rooms/${roomId}`,roomData,config);dispatch({type:actions.UPDATE_ROOM_SUCCESS});}catch(error){dispatch({type:actions.UPDATE_ROOM_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const deleteRoom=roomId=>async(dispatch,getState)=>{try{dispatch({type:actions.DELETE_ROOM_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{\"Authorization\":`Bearer ${userInfo.token}`}};await axios.delete(`/api/rooms/${roomId}`,config);dispatch({type:actions.DELETE_ROOM_SUCCESS});}catch(error){dispatch({type:actions.DELETE_ROOM_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};","map":{"version":3,"names":["axios","actions","fetchRooms","keyword","numOfBeds","roomType","currentPage","dispatch","type","FETCH_ROOMS_REQUEST","data","get","FETCH_ROOMS_SUCCESS","payload","error","FETCH_ROOMS_FAIL","response","message","getRoomDetails","id","ROOM_DETAILS_REQUEST","ROOM_DETAILS_SUCCESS","ROOM_DETAILS_FAIL","createRoomReview","review","getState","ROOM_CREATE_REVIEW_REQUEST","userLogin","userInfo","config","headers","token","post","ROOM_CREATE_REVIEW_SUCCESS","ROOM_CREATE_REVIEW_FAIL","createRoom","roomData","CREATE_ROOM_REQUEST","CREATE_ROOM_SUCCESS","CREATE_ROOM_FAIL","updateRoom","roomId","UPDATE_ROOM_REQUEST","put","UPDATE_ROOM_SUCCESS","UPDATE_ROOM_FAIL","deleteRoom","DELETE_ROOM_REQUEST","delete","DELETE_ROOM_SUCCESS","DELETE_ROOM_FAIL"],"sources":["D:/NAM3/DACN/hotel-booking-main/frontend/src/redux/actions/RoomActions.tsx"],"sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport * as actions from '../constants/RoomConstants';\nimport { IRoom, ICreateReview, TCreateRoom } from '../../interfaces/IRoom';\n\nexport const fetchRooms = (keyword: string, numOfBeds: number | string, roomType: string, currentPage: number) => \nasync (dispatch: Dispatch) => {\n    try {\n        dispatch({ type: actions.FETCH_ROOMS_REQUEST });\n\n        const { data } = \n        await axios.get(`/api/rooms/?keyword=${keyword}&numOfBeds=${numOfBeds}&roomType=${roomType}&pageNumber=${currentPage}`);\n\n        dispatch({ type: actions.FETCH_ROOMS_SUCCESS, payload: data });\n        \n    } catch (error: any) {\n        dispatch({ \n            type: actions.FETCH_ROOMS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n}\n\nexport const getRoomDetails = (id: IRoom['_id']) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.ROOM_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/rooms/${id}`);\n        dispatch({ type: actions.ROOM_DETAILS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.ROOM_DETAILS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const createRoomReview = (id: IRoom['_id'], review: ICreateReview) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.ROOM_CREATE_REVIEW_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/rooms/${id}/reviews`, review, config);\n        dispatch({ type: actions.ROOM_CREATE_REVIEW_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.ROOM_CREATE_REVIEW_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const createRoom = (roomData: TCreateRoom) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.CREATE_ROOM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/rooms`, roomData, config);\n        dispatch({ type: actions.CREATE_ROOM_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.CREATE_ROOM_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const updateRoom = (roomId: IRoom['_id'], roomData: TCreateRoom) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        \n        dispatch({ type: actions.UPDATE_ROOM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/JSON',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.put(`/api/rooms/${roomId}`, roomData, config);\n        dispatch({ type: actions.UPDATE_ROOM_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.UPDATE_ROOM_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const deleteRoom = (roomId: IRoom['_id']) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.DELETE_ROOM_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`/api/rooms/${roomId}`, config);\n        dispatch({ type: actions.DELETE_ROOM_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.DELETE_ROOM_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}