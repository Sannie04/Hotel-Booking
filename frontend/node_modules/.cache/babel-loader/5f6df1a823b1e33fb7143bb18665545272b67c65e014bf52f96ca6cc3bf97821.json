{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { usersFetchReducer, userDetailsReducer, userUpdateReducer, userDeleteReducer, userLoginReducer, userRegisterReducer, profileUpdateReducer, passwordUpdateReducer } from './reducers/UserReducers';\nimport { roomsFetchReducer, roomDetailsReducer, roomCreateReviewReducer, roomCreateReducer, roomUpdateReducer, roomDeleteReducer } from './reducers/RoomReducers';\nimport { bookingsFetchReducer, bookingDeleteReducer, roomBookingCheckReducer, bookingCreateReducer, bookedDatesReducer, BookingsMyReducer } from './reducers/BookingReducers';\nconst composeEnhancer = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducers = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  profileUpdate: profileUpdateReducer,\n  passwordUpdate: passwordUpdateReducer,\n  usersFetch: usersFetchReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  roomsFetch: roomsFetchReducer,\n  roomDetails: roomDetailsReducer,\n  roomCreateReview: roomCreateReviewReducer,\n  roomCreate: roomCreateReducer,\n  roomUpdate: roomUpdateReducer,\n  roomDelete: roomDeleteReducer,\n  roomBookingCheck: roomBookingCheckReducer,\n  bookingsFetch: bookingsFetchReducer,\n  bookingDelete: bookingDeleteReducer,\n  bookedDates: bookedDatesReducer,\n  bookingCreate: bookingCreateReducer,\n  BookingsMy: BookingsMyReducer\n});\nconst userInfoFromStorage = JSON.parse(localStorage.getItem(\"userInfo\"));\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(rootReducers, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["createStore","compose","applyMiddleware","combineReducers","thunk","usersFetchReducer","userDetailsReducer","userUpdateReducer","userDeleteReducer","userLoginReducer","userRegisterReducer","profileUpdateReducer","passwordUpdateReducer","roomsFetchReducer","roomDetailsReducer","roomCreateReviewReducer","roomCreateReducer","roomUpdateReducer","roomDeleteReducer","bookingsFetchReducer","bookingDeleteReducer","roomBookingCheckReducer","bookingCreateReducer","bookedDatesReducer","BookingsMyReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducers","userLogin","userRegister","profileUpdate","passwordUpdate","usersFetch","userDetails","userUpdate","userDelete","roomsFetch","roomDetails","roomCreateReview","roomCreate","roomUpdate","roomDelete","roomBookingCheck","bookingsFetch","bookingDelete","bookedDates","bookingCreate","BookingsMy","userInfoFromStorage","JSON","parse","localStorage","getItem","initialState","userInfo","store"],"sources":["D:/NAM3/DACN/hotel-booking/frontend/src/redux/store.tsx"],"sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { usersFetchReducer, userDetailsReducer, userUpdateReducer, userDeleteReducer, userLoginReducer, userRegisterReducer, profileUpdateReducer, passwordUpdateReducer } from './reducers/UserReducers';\nimport {roomsFetchReducer, roomDetailsReducer, roomCreateReviewReducer, roomCreateReducer, roomUpdateReducer, roomDeleteReducer } from './reducers/RoomReducers';\nimport { bookingsFetchReducer, bookingDeleteReducer, roomBookingCheckReducer, bookingCreateReducer, bookedDatesReducer, BookingsMyReducer } from './reducers/BookingReducers';\n\nconst composeEnhancer = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst rootReducers = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  profileUpdate: profileUpdateReducer,\n  passwordUpdate: passwordUpdateReducer,\n  usersFetch: usersFetchReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  roomsFetch: roomsFetchReducer,\n  roomDetails: roomDetailsReducer,\n  roomCreateReview: roomCreateReviewReducer,\n  roomCreate: roomCreateReducer,\n  roomUpdate: roomUpdateReducer,\n  roomDelete: roomDeleteReducer,\n  roomBookingCheck: roomBookingCheckReducer,\n  bookingsFetch: bookingsFetchReducer,\n  bookingDelete: bookingDeleteReducer,\n  bookedDates: bookedDatesReducer,\n  bookingCreate: bookingCreateReducer,\n  BookingsMy: BookingsMyReducer\n});\n\nconst userInfoFromStorage = JSON.parse(localStorage.getItem(\"userInfo\")!);\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\nconst store = createStore(\n  rootReducers,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,iBAAiB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,oBAAoB,EAAEC,qBAAqB,QAAQ,yBAAyB;AACzM,SAAQC,iBAAiB,EAAEC,kBAAkB,EAAEC,uBAAuB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,yBAAyB;AAChK,SAASC,oBAAoB,EAAEC,oBAAoB,EAAEC,uBAAuB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,4BAA4B;AAE7K,MAAMC,eAAe,GAAIC,MAAM,IAAKA,MAAM,CAASC,oCAAoC,IAAK1B,OAAO;AAEnG,MAAM2B,YAAY,GAAGzB,eAAe,CAAC;EACnC0B,SAAS,EAAEpB,gBAAgB;EAC3BqB,YAAY,EAAEpB,mBAAmB;EACjCqB,aAAa,EAAEpB,oBAAoB;EACnCqB,cAAc,EAAEpB,qBAAqB;EACrCqB,UAAU,EAAE5B,iBAAiB;EAC7B6B,WAAW,EAAE5B,kBAAkB;EAC/B6B,UAAU,EAAE5B,iBAAiB;EAC7B6B,UAAU,EAAE5B,iBAAiB;EAC7B6B,UAAU,EAAExB,iBAAiB;EAC7ByB,WAAW,EAAExB,kBAAkB;EAC/ByB,gBAAgB,EAAExB,uBAAuB;EACzCyB,UAAU,EAAExB,iBAAiB;EAC7ByB,UAAU,EAAExB,iBAAiB;EAC7ByB,UAAU,EAAExB,iBAAiB;EAC7ByB,gBAAgB,EAAEtB,uBAAuB;EACzCuB,aAAa,EAAEzB,oBAAoB;EACnC0B,aAAa,EAAEzB,oBAAoB;EACnC0B,WAAW,EAAEvB,kBAAkB;EAC/BwB,aAAa,EAAEzB,oBAAoB;EACnC0B,UAAU,EAAExB;AACd,CAAC,CAAC;AAEF,MAAMyB,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAE,CAAC;AAEzE,MAAMC,YAAY,GAAG;EACnBzB,SAAS,EAAE;IACT0B,QAAQ,EAAEN;EACZ;AACF,CAAC;AAED,MAAMO,KAAK,GAAGxD,WAAW,CACvB4B,YAAY,EACZ0B,YAAY,EACZ7B,eAAe,CAACvB,eAAe,CAACE,KAAK,CAAC,CACxC,CAAC;AAED,eAAeoD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}