{"ast":null,"code":"import axios from 'axios';\nimport * as actions from '../constants/BookingConstants';\nexport const checkRoomBooking = (id, checkInDate, checkOutDate) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.CHECK_ROOM_BOOKING_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\"\n      }\n    };\n    await axios.post(`/api/bookings/check`, {\n      id,\n      checkInDate,\n      checkOutDate\n    }, config);\n    dispatch({\n      type: actions.CHECK_ROOM_BOOKING_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.CHECK_ROOM_BOOKING_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createBooking = bookingData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.CREATE_BOOKING_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/bookings`, bookingData, config);\n    dispatch({\n      type: actions.CREATE_BOOKING_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.CREATE_BOOKING_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getBookedDates = roomId => async dispatch => {\n  try {\n    dispatch({\n      type: actions.GET_BOOKED_DATES_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/bookings/dates/${roomId}`);\n    dispatch({\n      type: actions.GET_BOOKED_DATES_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.GET_BOOKED_DATES_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getMyBookings = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.GET_MY_BOOKINGS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/bookings/me`, config);\n    dispatch({\n      type: actions.GET_MY_BOOKINGS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.GET_MY_BOOKINGS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getAllBookings = currentPage => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.FETCH_BOOKINGS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/JSON\",\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/bookings/?pageNumber=${currentPage}`, config);\n    dispatch({\n      type: actions.FETCH_BOOKINGS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.FETCH_BOOKINGS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteBooking = bookingId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.DELETE_BOOKING_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Authorization\": `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/bookings/${bookingId}`, config);\n    dispatch({\n      type: actions.DELETE_BOOKING_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: actions.DELETE_BOOKING_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","actions","checkRoomBooking","id","checkInDate","checkOutDate","dispatch","type","CHECK_ROOM_BOOKING_REQUEST","config","headers","post","CHECK_ROOM_BOOKING_SUCCESS","error","CHECK_ROOM_BOOKING_FAIL","payload","response","data","message","createBooking","bookingData","getState","CREATE_BOOKING_REQUEST","userLogin","userInfo","token","CREATE_BOOKING_SUCCESS","CREATE_BOOKING_FAIL","getBookedDates","roomId","GET_BOOKED_DATES_REQUEST","get","GET_BOOKED_DATES_SUCCESS","GET_BOOKED_DATES_FAIL","getMyBookings","GET_MY_BOOKINGS_REQUEST","GET_MY_BOOKINGS_SUCCESS","GET_MY_BOOKINGS_FAIL","getAllBookings","currentPage","FETCH_BOOKINGS_REQUEST","FETCH_BOOKINGS_SUCCESS","FETCH_BOOKINGS_FAIL","deleteBooking","bookingId","DELETE_BOOKING_REQUEST","delete","DELETE_BOOKING_SUCCESS","DELETE_BOOKING_FAIL"],"sources":["D:/NAM3/DACN/hotel-booking/frontend/src/redux/actions/BookingActions.tsx"],"sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from 'axios';\nimport * as actions from '../constants/BookingConstants';\nimport { IRoom } from \"../../interfaces/IRoom\";\nimport { IBooking, ICreateBooking } from \"../../interfaces/IBooking\";\n\nexport const checkRoomBooking = (id: IRoom['_id'], checkInDate: Date, checkOutDate: Date) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.CHECK_ROOM_BOOKING_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n            }\n        }\n\n        await axios.post(`/api/bookings/check`, {id, checkInDate, checkOutDate}, config);\n\n        dispatch({ type: actions.CHECK_ROOM_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.CHECK_ROOM_BOOKING_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const createBooking = (bookingData: ICreateBooking) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.CREATE_BOOKING_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/bookings`, bookingData, config);\n\n        dispatch({ type: actions.CREATE_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.CREATE_BOOKING_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const getBookedDates = (roomId:  IRoom['_id']) => async (dispatch: Dispatch) => {\n\n    try {\n        dispatch({ type: actions.GET_BOOKED_DATES_REQUEST });\n\n        const { data } = await axios.get(`/api/bookings/dates/${roomId}`);\n\n        dispatch({ type: actions.GET_BOOKED_DATES_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.GET_BOOKED_DATES_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const getMyBookings = () => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.GET_MY_BOOKINGS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/bookings/me`, config);\n\n        dispatch({ type: actions.GET_MY_BOOKINGS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.GET_MY_BOOKINGS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const getAllBookings = (currentPage: number) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.FETCH_BOOKINGS_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/JSON\",\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`/api/bookings/?pageNumber=${currentPage}`, config);\n\n        dispatch({ type: actions.FETCH_BOOKINGS_SUCCESS, payload: data });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.FETCH_BOOKINGS_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}\n\nexport const deleteBooking = (bookingId: IBooking['_id']) => async (dispatch: Dispatch, getState: any) => {\n\n    try {\n        dispatch({ type: actions.DELETE_BOOKING_REQUEST });\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                \"Authorization\": `Bearer ${userInfo.token}`\n            }\n        };\n\n        await axios.delete(`/api/bookings/${bookingId}`, config);\n\n        dispatch({ type: actions.DELETE_BOOKING_SUCCESS });\n\n    } catch (error: any) {\n        dispatch({ \n            type: actions.DELETE_BOOKING_FAIL, \n            payload: error.response && error.response.data.message ? \n            error.response.data.message : error.message });\n    }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}