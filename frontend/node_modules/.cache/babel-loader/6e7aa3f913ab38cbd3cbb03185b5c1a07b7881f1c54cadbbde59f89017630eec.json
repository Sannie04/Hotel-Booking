{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Container,Col,Row,Form,Button}from'react-bootstrap';import{useParams,useNavigate}from'react-router-dom';import{detailsUser,updateUser}from'../redux/actions/UserActions';import Loader from'../components/Loader';import Message from'../components/Message';import{UPDATE_USER_RESET}from'../redux/constants/UserConstants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminEditUserScreen=()=>{const dispatch=useDispatch();let navigate=useNavigate();const{id}=useParams();const[name,setName]=useState(\"\");const[email,setEmail]=useState(\"\");const[isAdmin,setIsAdmin]=useState(false);const{user,loading,error}=useSelector(state=>state.userDetails);const{loading:loadingUpdate,success:successUpdate,error:errorUpdate}=useSelector(state=>state.userUpdate);useEffect(()=>{if(!user||user._id!==id||successUpdate){dispatch({type:UPDATE_USER_RESET});dispatch(detailsUser(id));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}if(error){navigate(\"/\");}},[dispatch,user,id,successUpdate,error,navigate]);const handlerSubmit=e=>{e.preventDefault();dispatch(updateUser(user._id,{name,email,isAdmin}));};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(\"h3\",{className:\"mb-3\",children:\"Update User\"})})}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsxs(Col,{xs:12,md:6,children:[loading&&/*#__PURE__*/_jsx(Loader,{}),!loading&&user&&/*#__PURE__*/_jsxs(_Fragment,{children:[errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),/*#__PURE__*/_jsxs(Form,{onSubmit:handlerSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Full Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:name,placeholder:\"Full Name\",onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"E-Mail\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",value:email,placeholder:\"E-Mail\",onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin?true:false,onChange:e=>setIsAdmin(!isAdmin)})}),/*#__PURE__*/_jsx(Form.Group,{className:\"mt-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:loadingUpdate?/*#__PURE__*/_jsx(Loader,{}):`Update`})})]})]})]})})]});};export default AdminEditUserScreen;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Container","Col","Row","Form","Button","useParams","useNavigate","detailsUser","updateUser","Loader","Message","UPDATE_USER_RESET","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminEditUserScreen","dispatch","navigate","id","name","setName","email","setEmail","isAdmin","setIsAdmin","user","loading","error","state","userDetails","loadingUpdate","success","successUpdate","errorUpdate","userUpdate","_id","type","handlerSubmit","e","preventDefault","children","md","className","xs","variant","onSubmit","Group","controlId","Label","Control","value","placeholder","onChange","target","Check","label","checked"],"sources":["D:/NAM3/DACN/hotel-booking-main/frontend/src/screens/AdminEditUserScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap'\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { IUser } from '../interfaces/IUser';\nimport { detailsUser, updateUser } from '../redux/actions/UserActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { UPDATE_USER_RESET } from '../redux/constants/UserConstants';\n\ntype TId = {\n    id: IUser['_id']\n}\n\nconst AdminEditUserScreen = () => {\n\n    const dispatch = useDispatch();\n    let navigate = useNavigate();\n\n    const { id } = useParams<TId>();\n    const [name, setName] = useState<IUser['name']>(\"\");\n    const [email, setEmail] = useState<IUser['email']>(\"\");\n    const [isAdmin, setIsAdmin] = useState<IUser['isAdmin']>(false);\n\n    const { user, loading, error } = useSelector((state: RootStateOrAny) => state.userDetails);\n\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = useSelector((state: RootStateOrAny) => state.userUpdate);\n\n    useEffect(() => {\n        if(!user || user._id !== id || successUpdate) {\n            dispatch({ type: UPDATE_USER_RESET });\n            dispatch(detailsUser(id as string));\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setIsAdmin(user.isAdmin);\n        }\n\n        if(error) {\n            navigate(\"/\");\n        }\n    }, [dispatch, user, id, successUpdate,error,navigate])\n    \n    const handlerSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        dispatch(updateUser(user._id as string, { name, email, isAdmin }));\n    }\n\n  return (\n    <Container>\n        <Row>\n            <Col md={12}>\n                <h3 className='mb-3'>Update User</h3>\n            </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n            <Col xs={12} md={6}>\n                {loading && <Loader />}\n                {!loading && user && (\n                    <>\n                        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                        <Form onSubmit={handlerSubmit}>\n                            <Form.Group controlId=\"name\" className=\"mb-3\">\n                                <Form.Label>Full Name</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    value={name} \n                                    placeholder=\"Full Name\" \n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"email\" className=\"mb-3\">\n                                <Form.Label>E-Mail</Form.Label>\n                                <Form.Control \n                                    type=\"email\" \n                                    value={email} \n                                    placeholder=\"E-Mail\" \n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"isAdmin\">\n                                <Form.Check \n                                    type=\"checkbox\" \n                                    label=\"Is Admin\" \n                                    checked={isAdmin ? true : false}\n                                    onChange={(e) => setIsAdmin(!isAdmin)}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"mt-3\">\n                                <Button type=\"submit\">\n                                    {loadingUpdate ? <Loader /> : `Update`}\n                                </Button>\n                            </Form.Group>\n                        </Form>\n                    </>\n                )}\n            </Col>\n        </Row>\n    </Container>\n  )\n}\n\nexport default AdminEditUserScreen"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}