{"ast":null,"code":"var _jsxFileName = \"D:\\\\NAM3\\\\DACN\\\\hotel-booking-main\\\\frontend\\\\src\\\\screens\\\\PasswordScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { updatePassword } from '../redux/actions/UserActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordScreen = () => {\n  _s();\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errConfirmPassword, setErrConfirmPassowrd] = useState(\"\");\n  const {\n    success,\n    loading,\n    error\n  } = useSelector(state => state.passwordUpdate);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newPassword === confirmPassword) {\n      dispatch(updatePassword({\n        oldPassword,\n        newPassword\n      }));\n      setErrConfirmPassowrd(\"\");\n    } else {\n      setErrConfirmPassowrd(\"New Password must match confirm password\");\n    }\n  };\n  useEffect(() => {\n    if (success) {\n      navigate(\"/account/password\");\n      setOldPassword(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n    }\n  }, [success, dispatch, navigate]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 27\n        }, this), errConfirmPassword && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errConfirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 40\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"primary\",\n          children: \"Password Updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"oldPassword\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: oldPassword,\n              placeholder: \"Old Password\",\n              onChange: e => setOldPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"newPassword\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: newPassword,\n              placeholder: \"New Password\",\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: confirmPassword,\n              placeholder: \"Confirm Password\",\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 40\n              }, this) : `Update`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(PasswordScreen, \"LeCSDekh6vKZgsP8qeJwCkvX8mI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = PasswordScreen;\nexport default PasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"PasswordScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","Container","Row","Col","Form","Button","updatePassword","Message","Loader","jsxDEV","_jsxDEV","PasswordScreen","_s","dispatch","navigate","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errConfirmPassword","setErrConfirmPassowrd","success","loading","error","state","passwordUpdate","handleSubmit","e","preventDefault","children","className","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","type","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["D:/NAM3/DACN/hotel-booking-main/frontend/src/screens/PasswordScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch, RootStateOrAny } from 'react-redux';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { updatePassword } from '../redux/actions/UserActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { IUpdatePassword } from '../interfaces/IUser';\n\nconst PasswordScreen: React.FC = () => {\n\n    const dispatch = useDispatch();\n    let navigate = useNavigate();\n\n    const [oldPassword, setOldPassword] = useState<IUpdatePassword['oldPassword']>(\"\");\n    const [newPassword, setNewPassword] = useState<IUpdatePassword['newPassword']>(\"\");\n    const [confirmPassword, setConfirmPassword] = useState<IUpdatePassword['confirmPassword']>(\"\");\n    const [errConfirmPassword, setErrConfirmPassowrd] = useState<IUpdatePassword['errConfirmPassword']>(\"\");\n\n    const { success, loading, error } = useSelector((state: RootStateOrAny) => state.passwordUpdate);\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if(newPassword === confirmPassword) {\n            dispatch(updatePassword({ oldPassword, newPassword }));\n            setErrConfirmPassowrd(\"\");\n        } else {\n            setErrConfirmPassowrd(\"New Password must match confirm password\")\n        }\n    }\n\n    useEffect(() => {\n        if(success) {\n            navigate(\"/account/password\");\n            setOldPassword(\"\");\n            setNewPassword(\"\");\n            setConfirmPassword(\"\");\n        }\n    }, [success, dispatch,navigate]);\n    \n\n  return (\n      <Container>\n        <Row className='justify-content-center'>\n            <Col xs={12} md={6}>\n                <h2 className=\"mb-4\">Update Password</h2>\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {errConfirmPassword && <Message variant=\"danger\">{errConfirmPassword}</Message>}\n                {success && <Message variant=\"primary\">Password Updated</Message>}\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"oldPassword\" className=\"mb-3\">\n                        <Form.Label>Old Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            value={oldPassword} \n                            placeholder=\"Old Password\" \n                            onChange={(e) => setOldPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"newPassword\" className=\"mb-3\">\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            value={newPassword} \n                            placeholder=\"New Password\" \n                            onChange={(e) => setNewPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"confirmPassword\" className=\"mb-3\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            value={confirmPassword} \n                            placeholder=\"Confirm Password\" \n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {loading ? <Loader /> : `Update`}\n                        </Button>\n                    </Form.Group>\n                </Form>\n            </Col>\n        </Row>\n    </Container>\n  );\n};\n\nexport default PasswordScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}